mod constants {
    // Model parameters
    pub const MUS: [f64; 30] = [-0.0500000000000000, -0.0372751426827093, -0.0277887252403267,  -0.0207165739660756, -0.0154442650096474, -0.0115137436372836,  -0.0085835287378376, -0.0063990451684807, -0.0047705064337644,  -0.0035564261597470, -0.0026513258509018, -0.0019765709878144,  -0.0014735393118657, -0.0010985277619675, -0.0008189555813651,  -0.0006105337229237, -0.0004551546326917, -0.0003393190775256,  -0.0002529633405947, -0.0001885848922832, -0.0001405905753532,  -0.0001048106751227, -0.0000781366573974, -0.0000582511010648,  -0.0000434263620723, -0.0000323744768487, -0.0000241352648763,  -0.0000179929088390, -0.0000134137648850, -0.0000100000000000];
    pub const SIGMAS: [f64; 30] = [0.0000100000000000, 0.0000134137648850, 0.0000179929088390,  0.0000241352648763, 0.0000323744768487, 0.0000434263620723,  0.0000582511010648, 0.0000781366573974, 0.0001048106751227,  0.0001405905753532, 0.0001885848922832, 0.0002529633405947,  0.0003393190775256, 0.0004551546326917, 0.0006105337229237,  0.0008189555813651, 0.0010985277619675, 0.0014735393118657,  0.0019765709878144, 0.0026513258509018, 0.0035564261597470,  0.0047705064337644, 0.0063990451684807, 0.0085835287378376,  0.0115137436372836, 0.0154442650096474, 0.0207165739660756,  0.0277887252403267, 0.0372751426827093, 0.0500000000000000];
    pub const ALPHAS: [f64; 3] = [0., -2., -4.];
    pub const BETAS: [f64; 6] = [0., 1000., 2000., 3000., 5000., 7000.];
    pub const TOTAL: usize = MUS.len() * SIGMAS.len() * ALPHAS.len() * BETAS.len();

    // Simulation parameters
    pub const LOWER_S: f64 = -1.;
    pub const UPPER_S: f64 = 1.;
    pub const VARIANCE_SAMPLES: usize = 1_000;
    pub const ERROR_LIMIT: f64 = 1e-6;
}

mod collective;
mod individual;


fn main() {
    if true {
        collective::collective_main();
    } else {
        individual::individual_main();
    }
}